function [fitresult, gof] = GaussianFit2D(img_fit,center,radius)
%GaussianFit2D(X,Y,Z)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 31-Mar-2017 17:09:47


%% Fit: 'untitled fit 1'.
radius = int32(radius);
img_in = img_fit;
img_size = size(img_in);
center = int32(center);


start_point = center - radius;
end_point = center + radius;

box_x = start_point(1) : end_point(1);
box_y = start_point(2) : end_point(2);
% avoid the overflowed indexes
box_x(box_x<1) = [];box_x(box_x>img_size(2)) = [];
box_y(box_y<1) = [];box_y(box_y>img_size(1)) = [];
% notice: the location of the coordinates is different
fit_img = img_in(box_y,box_x);

[Y,X] = meshgrid(box_y,box_x);

x = double(X(:));
y = double(Y(:));
z = double(fit_img(:));
[xData, yData, zData] = prepareSurfaceData( x, y, z );

% Set up fittype and options.
ft = fittype( 'z0 + amp*exp(-(x-x0).^2/(2*sigmax^2)-(y-y0).^2/(2*sigmay^2))', 'independent', {'x', 'y'}, 'dependent', 'z' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Robust = 'Off';
% opts.StartPoint = [5000 3 3 52 66 0.957506835434298];
amp_int = img_in(center(2),center(1));
sdx_int = 1;sdy_int =1;
x0_int = center(1);y0_int = center(2);
opts.StartPoint = [amp_int sdx_int sdy_int x0_int y0_int min(z(:))];

% Fit model to data.
[fitresult, gof] = fit( [xData, yData], zData, ft, opts );

% % Plot fit with data.
% figure( 'Name', 'untitled fit 1' );
% h = plot( fitresult, [xData, yData], zData );
% legend( h, 'untitled fit 1', 'z vs. x, y', 'Location', 'NorthEast' );
% Label axes
% xlabel x
% ylabel y
% zlabel z
% grid on
% view( 116.7, 50.5 );


